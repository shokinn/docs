{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome my Docs \u00b6 These docs are written in Markdown and generated to a Wiki with MkDocs . The used theme is Material for MkDocs . Here you can find the docs to my Projects. Sincerely Yours, Philip","title":"Home"},{"location":"#welcome-my-docs","text":"These docs are written in Markdown and generated to a Wiki with MkDocs . The used theme is Material for MkDocs . Here you can find the docs to my Projects. Sincerely Yours, Philip","title":"Welcome my Docs"},{"location":"imprint/","text":"Impressum \u00b6 Angaben gem\u00e4\u00df \u00a7 5 TMG: \u00b6 Philip Henning Hallesches Ufer 28 10963 Berlin Kontakt: \u00b6 Telefon: +49 (0) 172 724 1337 Telefax: +49 (0) 3222 9349378 E-Mail: mail+imprint@philip-henning.com Verantwortlich f\u00fcr den Inhalt nach \u00a7 55 Abs. 2 RStV: \u00b6 Philip Henning Hallesches Ufer 28 10963 Berlin Quelle: Impressum-Generator von anwalt.de","title":"Imprint"},{"location":"imprint/#impressum","text":"","title":"Impressum"},{"location":"imprint/#angaben-gema-5-tmg","text":"Philip Henning Hallesches Ufer 28 10963 Berlin","title":"Angaben gem\u00e4\u00df \u00a7 5 TMG:"},{"location":"imprint/#kontakt","text":"Telefon: +49 (0) 172 724 1337 Telefax: +49 (0) 3222 9349378 E-Mail: mail+imprint@philip-henning.com","title":"Kontakt:"},{"location":"imprint/#verantwortlich-fur-den-inhalt-nach-55-abs-2-rstv","text":"Philip Henning Hallesches Ufer 28 10963 Berlin Quelle: Impressum-Generator von anwalt.de","title":"Verantwortlich f\u00fcr den Inhalt nach \u00a7 55 Abs. 2 RStV:"},{"location":"license/","text":"License \u00b6 MIT License Copyright \u00a9 2017 Philip Henning Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#license","text":"MIT License Copyright \u00a9 2017 Philip Henning Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/","text":"Arch Linux Dell XPS 15 (9560) \u00b6 Pre-installation \u00b6 UEFI \u00b6 Before installing it is necessary to modify some UEFI Settings. They can be accessed by pressing the F2 key repeatedly when booting. Change the SATA Mode from the default \"RAID\" to \"AHCI\". This will allow Linux to detect the NVME SSD. If dual booting with an existing Windows installation, Windows will not boot after the change but this can be fixed without a reinstallation. Change Fastboot to \"Thorough\" in \"POST Behaviour\". This prevents intermittent boot failures. Disable secure boot to allow Linux to boot. Installation of Arch Linux can proceed normally. Refer to the Installation guide for more information. Change Keyboard layout \u00b6 If you don't have an EN:Intl. Keyboard layout you should change it to your layout. In my case it is de-latin1-nodeadkeys1 . loadkeys de-latin1-nodeadkeys1 Connect to a wireless network during installation (temporary) \u00b6 Change to TTY2 with ALT + F2 and use the following example to connect to your network. wpa_supplicant -D nl80211,ext -i wlp2s0 -c <(wpa_passphrase 'YourWififNetwork' 'YourWifiPassword') Afterwards you establish the connection change back to TTY1 with ALT + F1 . Update the system clock \u00b6 Use timedatectl(1) to ensure the system clock is accurate: # timedatectl set-ntp true # systemctl start sysdemd-timesyncd To check the service status, use timedatectl status. Installation \u00b6 Preparing Disks \u00b6 I'll encrypt my Data so my Partition layout looks like this: +----------------+----------------+----------------+-----------------------------------------------------------------------------------------------+ | | | | | | | | | | | | LUKS encrypted volume | LUKS encrypted volume | LUKS encrypted volume | LUKS encrypted volume | | | | | /dev/mapper/swap | /dev/mapper/tmp | /dev/mapper/root | /dev/mapper/home | | | | |_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _| | | | | | | | | | | | | 16 GiB | 30 GiB | 50 GiB | 100%FREE | | | | | Logical volume1 | Logical volume2 | Logical volume3 | Logical volume4 | | | | | /dev/mapper/osvg-swap | /dev/mapper/osvg-tmp | /dev/mapper/osvg-root | /dev/mapper/osvg-home | | | | EF02 |_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _| | EF00 | 8300 | 8 MiB | | | 500 MiB | 500 MiB | BIOS | 8E00 | | EFI partition | boot partition | Boot partition | 100%FREE | | /dev/nvme0n1p1 | /dev/nvme0n1p2 | /dev/nvme0n1p3 | /dev/nvme0n1p4 | +----------------+----------------+----------------+-----------------------------------------------------------------------------------------------+ Create these partitions with gdisk so that you have GPT instead of MBR . Wipe Data on all partitions \u00b6 # dd if=/dev/zero of=/dev/nvme0n1p1 bs=1M status=progress # dd if=/dev/zero of=/dev/nvme0n1p2 bs=1M status=progress # dd if=/dev/zero of=/dev/nvme0n1p3 bs=1M status=progress # dd if=/dev/zero of=/dev/nvme0n1p4 bs=1M status=progress Preparing the logical volumes \u00b6 # pvcreate /dev/nvme0n1p4 # vgcreate osvg /dev/nvme0n1p4 # lvcreate -L 16G -n swap osvg # lvcreate -L 30G -n tmp osvg # lvcreate -L 50G -n root osvg # lvcreate -l 100%FREE -n home osvg Setup LUKS for our partitions \u00b6 Create an encrypted root with a key you can remember. # cryptsetup luksFormat /dev/mapper/osvg-root Open the root filesystem to create an encryption key for all other partitions. # cryptsetup luksOpen /dev/mapper/osvg-root root # mkfs.ext4 /dev/mapper/root # mnt /dev/mapper/root /mnt # mkdir -pm 700 /mnt/etc/luks-keys # dd if=/dev/random of=/mnt/etc/luks-keys/home bs=1 count=1024 status=progress # chmod 000 /mnt/etc/luks-keys/home Use the encrypted key to create our encrypted home and add a pass phrase for emergency access: # cryptsetup luksFormat /dev/mapper/osvg-home # cryptsetup luksAddKey /dev/mapper/osvg-home --key-file=/mnt/etc/luks-keys/home Now we open home, make a filesystem and mount it to /mnt/home . # cryptsetup luksOpen --key-file=/mnt/etc/luks-keys/home /dev/mapper/osvg-home home # mkfs.ext4 /dev/mapper/home # mkdir -p /mnt/home # mount /dev/mapper/home /mnt/home and rebuild the EFI and boot partition: # mkfs.vfat /dev/nvme0n1p1 # mkfs.ext4 /dev/nvme0n1p2 Setup and mount the boot/EFI partition: # mkdir /mnt/boot # mount /dev/nvme0n1p2 /mnt/boot # mkdir /mnt/boot/EFI # mkdir /mnt/esp # mount /dev/nvme0n1p1 /mnt/esp Install Arch \u00b6 Sort mirrors by speed \u00b6 The pacman package provides a Bash script, /usr/bin/rankmirrors , which can be used to rank the mirrors according to their connection and opening speeds to take advantage of using the fastest local mirror. Back up the existing /etc/pacman.d/mirrorlist : # cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak Edit /etc/pacman.d/mirrorlist.backup and uncomment mirrors for testing with rankmirrors . Run the following sed line to uncomment every mirror: # sed -i 's/^Server/#Server/' /etc/pacman.d/mirrorlist.bak Finally, rank the mirrors. Operand -n 6 means only output the 6 fastest mirrors: # rankmirrors -n 6 /etc/pacman.d/mirrorlist.bak > /etc/pacman.d/mirrorlist Install the base packages \u00b6 Use the pacstrap script to install the base package group: # pacstrap /mnt base This group does not include all tools from the live installation, such as btrfs-progs or specific wireless firmware; see packages.both for comparison. To install packages and other groups such as base-devel , append the names to pacstrap (space separated) or to individual pacman commands after the #Chroot step. Configure the system \u00b6 Gen fstab \u00b6 Generate an fstab file (use -U or -L to define by UUID or labels, respectively): # genfstab -U /mnt >> /mnt/etc/fstab Check the resulting file in /mnt/etc/fstab afterwards, and edit it in case of errors. Add the following at the end of the /mnt/etc/fstab configuration. /dev/mapper/tmp /tmp tmpfs defaults 0 0 /dev/mapper/swap none swap sw 0 0 /esp/EFI /boot/EFI none defaults,bind 0 0 Modify /etc/crypttab \u00b6 Add these at the end to the /etc/crypttab . swap /dev/mapper/MyVol-swap /dev/urandom swap,cipher=aes-xts-plain64,size=256 tmp /dev/mapper/MyVol-tmp /dev/urandom tmp,cipher=aes-xts-plain64,size=256 home /dev/mapper/MyVol-home /etc/luks-keys/home Chroot \u00b6 Change root into the new system: # arch-chroot /mnt Uncomment pacman multilib option \u00b6 In /etc/pacman.conf uncomment the following lines. [...] [multilib] Include = /etc/pacman.d/mirrorlist [...] Install Packages \u00b6 pacman -Sy pacman -S base-devel grub efibootmgr dialog networkmanager network-manager-applet wireless_tools intel-ucode zsh w3m vim powertop bc Create my User \u00b6 useradd -m -G wheel,audio,video,users,uucp,disk,optical,storage,rfkill -s /bin/zsh phg passwd phg Disable root login \u00b6 # passwd -l root Allow group wheel so user sudo \u00b6 Uncomment %wheel ALL=(ALL) ALL . Use visudo to edit the /etc/sudoers file. Keep http_proxy variables \u00b6 Add the following at the end of the 'Defaults' section. Defaults env_keep += \"http_proxy\" Defaults env_keep += \"https_proxy\" Install yaourt \u00b6 Zuerst muss das Paket package-query installiert werden, denn yaourt beruht darauf: # curl -O https://aur.archlinux.org/cgit/aur.git/snapshot/package-query.tar.gz # tar -xvzf package-query.tar.gz # cd package-query # sudo -u phg makepkg -si Danach wechselt man wieder ins n\u00e4chst h\u00f6here Verzeichnis und installiert yaourt: # cd .. # curl -O https://aur.archlinux.org/cgit/aur.git/snapshot/yaourt.tar.gz # tar -xvzf yaourt.tar.gz # cd yaourt # sudo -u phg makepkg -si Time zone \u00b6 Set the time zone: # ln -sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime Run hwclock(8) to generate /etc/adjtime: # hwclock --systohc This command assumes the hardware clock is set to UTC. See Time#Time standard for details. Enable timedated service: # systemctl enable sysdemd-timesyncd Locale \u00b6 Uncomment the following localizations in /etc/locale.gen : [...] de_DE.UTF-8 UTF-8 de_DE ISO-8859-1 [...] en_US.UTF-8 UTF-8 en_US ISO-8859-1 [...] and generate them with: # locale-gen Set the LANG variable in locale.conf(5) accordingly, for example: /etc/locale.conf LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_TIME=de_DE.UTF-8 LC_CTYPE=en_US.UTF-8 LC_COLLATE=C LC_MONETARY=de_DE.UTF-8 LC_MESSAGES=en_US.UTF-8 LC_PAPER=de_DE.UTF-8 LC_NAME=de_DE.UTF-8 LC_ADDRESS=de_DE.UTF-8 LC_TELEPHONE=de_DE.UTF-8 LC_MEASUREMENT=de_DE.UTF-8 LC_IDENTIFICATION=de_DE.UTF-8 Setup console \u00b6 Install console powerline font \u00b6 Install the console powerline fonts. # yaourt -S powerline-console-fonts ttf-ms-fonts Edit the /etc/vconsole.conf file and add the following to the TOP of the file: FONT=ter-powerline-v14n [...] Set keymap \u00b6 If you set the keyboard layout, make the changes persistent in vconsole.conf(5) : /etc/vconsole.conf [...] KEYMAP=de-latin1-nodeadkeys Hostname \u00b6 Create the hostname(5) file: /etc/hostname yoetunheimr Consider adding a matching entry to hosts(5) : /etc/hosts 127.0.0.1 localhost.localdomain localhost ::1 localhost.localdomain localhost 127.0.1.1 yoetunheimr.sao.local yoetunheimr See also Network configuration#Set the hostname . Edit mkinitpico \u00b6 Add the keyboard , keymap , lvm2 and encrypt hooks to mkinitcpio.conf : /etc/mkinitcpio.conf : HOOKS=(... keyboard keymap block lvm2 encrypt ... filesystems ...) Generate initramfs \u00b6 # mkinitcpio -p linux Install GRUB \u00b6 # grub-install --target=x86_64-efi --efi-directory=/esp --bootloader-id=grub # mount --bind /esp/EFI /boot/EFI Configuring the boot loader \u00b6 In order to unlock the encrypted root partition at boot, the following kernel parameters need to be set by the boot loader ( /etc/default/grub ): GRUB_CMDLINE_LINUX_DEFAULT=\"quiet acpi_rev_override=1 pci=nommconf\" GRUB_CMDLINE_LINUX=\"cryptdevice=/dev/mapper/osvg-root:root root=/dev/mapper/root\" ??? Note 'Command explanation' * acpi_rev_override=1 is needed to get the NVIDIA graphics card working resp. to disable it. * The kernel option pci=nommconf disables Memory-Mapped PCI Configuration Space, which is available in Linux since kernel 2.6. Very roughly, all PCI devices have an area that describe this device (which you see with lspci -vv), and the originally method to access this area involves going through I/O ports, while PCIe allows this space to be mapped to memory for simpler access. * cryptdevice=/dev/mapper/osvg-root:root root=/dev/mapper/root configures the crypt device. Generate GRUB config \u00b6 # grub-mkconfig -o /boot/grub/grub.cfg See Dm-crypt/System configuration#Boot loader for details. Reboot into the installed system \u00b6 Leave the chroot environment. exit Unmount all partitions and reboot. # umount -R /mnt # reboot Post installation configuration \u00b6 Get graphicscard and X working \u00b6 ACPI Override \u00b6 Add these to the kernel parameter in the /etc/default/grub configuration. GRUB_CMDLINE_LINUX_DEFAULT=\"[...] acpi_rev_override=1\" Now rebuild the GRUB configuration. # grub-mkconfig -o /boot/grub/grub.cfg Install graphic card tools \u00b6 # pacman -S bbswitch bumblebee primus lib32-primus Use libglvnd as libgl provider. Enable the bumblebee service. # systemctl enable bumblebeed.service Afterwards reboot the system. Tip You may need to reboot twice for the firmware to notice acpi_rev_override . Graphics card drivers/utils \u00b6 # yaourt -Sy # yaourt -S nvidia-beta nvidia-utils-beta lib32-nvidia-utils-beta Install X \u00b6 # pacman -S xorg xorg-xinit xf86-input-synaptics Install login manager \u00b6 # pacman -S lightdm # yaourt -S lightdm-webkit-theme-litarvan # systemctl enable lightdm Enable Webkit2 greeter \u00b6 Create the lightdm.conf.d folder: # mkdir /etc/lightdm/lightdm.conf.d/ Set the default greeter by adding the following LightDM configuration file, like so: /etc/lightdm/lightdm.conf.d/50-lightdm-webkit2-greeter.conf [Seat:*] greeter-session=lightdm-webkit2-greeter LightDM Webkit2 theme 'litarvan' \u00b6 Edit the file /etc/lightdm/lightdm-webkit2-greeter.conf and set the \" webkit-theme \" property to \" litarvan \", like so: [...] webkit_theme = litarvan [...] BSPWM Session \u00b6 Change X keyboard layout to german \u00b6 /etc/X11/xorg.conf.d/00-keyboard.conf Section \"InputClass\" Identifier \"keyboard\" MatchIsKeyboard \"yes\" Option \"XkbLayout\" \"de\" Option \"XkbVariant\" \"nodeadkeys\" EndSection Add Touchpad options \u00b6 /etc/X11/xorg.conf.d/50-synaptics.conf : Section \"InputClass\" Identifier \"touchpad catchall\" Driver \"synaptics\" MatchIsTouchpad \"on\" # enable clik zone and configure 3 buttons on bottom Option \"ClickPad\" \"1\" Option \"SoftButtonAreas\" \"60% 0 82% 0 40% 60% 82% 0\" # other commons options than you may want to configure # scroll with two fingers (enabled vertically, disabled horizontally) Option \"VertTwoFingerScroll\" \"1\" Option \"HorizTwoFingerScroll\" \"0\" # enable natural scrolling Option \"VertScrollDelta\" \"-111\" Option \"HorizScrollDelta\" \"-111\" # enable tap as click: 1 finger -> left button, 2 fingers -> right, 3 fingers -> middle Option \"TapButton1\" \"1\" Option \"TapButton2\" \"3\" Option \"TapButton3\" \"2\" # idem but for click with 1,2,3 fingers. Use \"0\" to disable. Option \"ClickFinger1\" \"1\" Option \"ClickFinger2\" \"3\" Option \"ClickFinger3\" \"2\" # palm detection. These parameters somehow works, YMMV. Option \"PalmDetect\" \"1\" Option \"PalmMinWidth\" \"10\" Option \"PalmMinZ\" \"200\" EndSection Install xorg-xbacklight replacement \u00b6 Note xorg-xbacklight does not work with the modesetting driver! # yaourt -S acpilight Add the following file /etc/udev/rules.d/90-backlight.rules : SUBSYSTEM==\"backlight\", ACTION==\"add\", \\ RUN+=\"/bin/chgrp video %S%p/brightness\", \\ RUN+=\"/bin/chmod g+w %S%p/brightness\" Window manager \u00b6 Install bspwm, sxhkd, feh and fonts + dependencies. # pacman -S bspwm sxhkd feh i3lock # yaourt -S polybar Get my dot files \u00b6 Clone my dotfiles. # pacman -Sy # pacman -S git python-pip # cd ~ # git clone git@github.com:shokinn/.files.git ~/.files # cd .files # sudo pip install -r dotdrop/requirements.txt # alias dotdrop='eval $(grep -v \"^#\" ~/dotfiles/.env.public) ~/dotfiles/dotdrop.sh' # dotdrop install Enable lockscreen at suspend \u00b6 Create a service file /etc/systemd/system/i3lock@.service : [Unit] Description=Lock the screen on resume from suspend Before=sleep.target [Service] User=%I Type=forking Environment=DISPLAY=:0 ExecStart=/home/%I/.config/bspwm/lock.sh [Install] WantedBy=suspend.target Enable the service # systemctl daemon-reload # systemctl enable i3lock@phg Make powertop optimazations permanent \u00b6 /etc/systemd/system/powertop.service : [Unit] Description=PowerTOP auto tune [Service] Type=idle Environment=\"TERM=dumb\" ExecStart=/usr/sbin/powertop --auto-tune [Install] WantedBy=multi-user.target # systemctl daemon-reload # systemctl enable powertop.service Enable network manager \u00b6 # systemctl enable NetworkManager Install packages \u00b6 # pacman -S firefox \\ alsa-utils \\ alsa-tools \\ alsa-plagins \\ pulseaudio \\ pulseaudio-alsa \\ exfat-utils \\ openssh \\ net-tools \\ keepass \\ keepass-plugin-keeagent \\ inkscape \\ gimp \\ vlc \\ qt4 \\ libsecret \\ gnome-keyring \\ libgnome-keyring \\ thunderbird \\ pinentry \\ gpa \\ dmenu \\ mc \\ nemo \\ nemo-fileroller \\ nemo-image-converter \\ nemo-preview \\ nemo-seahorse \\ nemo-share \\ linux-headers \\ wireguard-dkms \\ wireguard-tools \\ wmname # gpg --recv-keys --keyserver sks-keyservers.net 0xDB1187B9DD5F693B # yaourt -S tldr \\ keepass-plugin-rpc \\ keepass-plugin-haveibeenpwned \\ keepass-plugin-http \\ keepass2-plugin-tray-icon \\ nextcloud-client-git \\ rambox \\ crossover \\ thunderbird-enigmail \\ gtkhash-nemo \\ nemo-compare Enable SSH-Agent Serive \u00b6 # systemctl --user daemon-reload # systemctl --user enable ssh-agent.service # systemctl --user start ssh-agent.service TODO \u00b6 Crypto fixen Use an Hardware device for 2 nd Factor authentication Maybe use TOTP as 2 nd Factor? Audio (Mic) Get external Microphones working!","title":"Arch Linux"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#arch-linux-dell-xps-15-9560","text":"","title":"Arch Linux Dell XPS 15 (9560)"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#pre-installation","text":"","title":"Pre-installation"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#uefi","text":"Before installing it is necessary to modify some UEFI Settings. They can be accessed by pressing the F2 key repeatedly when booting. Change the SATA Mode from the default \"RAID\" to \"AHCI\". This will allow Linux to detect the NVME SSD. If dual booting with an existing Windows installation, Windows will not boot after the change but this can be fixed without a reinstallation. Change Fastboot to \"Thorough\" in \"POST Behaviour\". This prevents intermittent boot failures. Disable secure boot to allow Linux to boot. Installation of Arch Linux can proceed normally. Refer to the Installation guide for more information.","title":"UEFI"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#change-keyboard-layout","text":"If you don't have an EN:Intl. Keyboard layout you should change it to your layout. In my case it is de-latin1-nodeadkeys1 . loadkeys de-latin1-nodeadkeys1","title":"Change Keyboard layout"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#connect-to-a-wireless-network-during-installation-temporary","text":"Change to TTY2 with ALT + F2 and use the following example to connect to your network. wpa_supplicant -D nl80211,ext -i wlp2s0 -c <(wpa_passphrase 'YourWififNetwork' 'YourWifiPassword') Afterwards you establish the connection change back to TTY1 with ALT + F1 .","title":"Connect to a wireless network during installation (temporary)"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#update-the-system-clock","text":"Use timedatectl(1) to ensure the system clock is accurate: # timedatectl set-ntp true # systemctl start sysdemd-timesyncd To check the service status, use timedatectl status.","title":"Update the system clock"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#installation","text":"","title":"Installation"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#preparing-disks","text":"I'll encrypt my Data so my Partition layout looks like this: +----------------+----------------+----------------+-----------------------------------------------------------------------------------------------+ | | | | | | | | | | | | LUKS encrypted volume | LUKS encrypted volume | LUKS encrypted volume | LUKS encrypted volume | | | | | /dev/mapper/swap | /dev/mapper/tmp | /dev/mapper/root | /dev/mapper/home | | | | |_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _| | | | | | | | | | | | | 16 GiB | 30 GiB | 50 GiB | 100%FREE | | | | | Logical volume1 | Logical volume2 | Logical volume3 | Logical volume4 | | | | | /dev/mapper/osvg-swap | /dev/mapper/osvg-tmp | /dev/mapper/osvg-root | /dev/mapper/osvg-home | | | | EF02 |_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _| | EF00 | 8300 | 8 MiB | | | 500 MiB | 500 MiB | BIOS | 8E00 | | EFI partition | boot partition | Boot partition | 100%FREE | | /dev/nvme0n1p1 | /dev/nvme0n1p2 | /dev/nvme0n1p3 | /dev/nvme0n1p4 | +----------------+----------------+----------------+-----------------------------------------------------------------------------------------------+ Create these partitions with gdisk so that you have GPT instead of MBR .","title":"Preparing Disks"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#wipe-data-on-all-partitions","text":"# dd if=/dev/zero of=/dev/nvme0n1p1 bs=1M status=progress # dd if=/dev/zero of=/dev/nvme0n1p2 bs=1M status=progress # dd if=/dev/zero of=/dev/nvme0n1p3 bs=1M status=progress # dd if=/dev/zero of=/dev/nvme0n1p4 bs=1M status=progress","title":"Wipe Data on all partitions"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#preparing-the-logical-volumes","text":"# pvcreate /dev/nvme0n1p4 # vgcreate osvg /dev/nvme0n1p4 # lvcreate -L 16G -n swap osvg # lvcreate -L 30G -n tmp osvg # lvcreate -L 50G -n root osvg # lvcreate -l 100%FREE -n home osvg","title":"Preparing the logical volumes"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#setup-luks-for-our-partitions","text":"Create an encrypted root with a key you can remember. # cryptsetup luksFormat /dev/mapper/osvg-root Open the root filesystem to create an encryption key for all other partitions. # cryptsetup luksOpen /dev/mapper/osvg-root root # mkfs.ext4 /dev/mapper/root # mnt /dev/mapper/root /mnt # mkdir -pm 700 /mnt/etc/luks-keys # dd if=/dev/random of=/mnt/etc/luks-keys/home bs=1 count=1024 status=progress # chmod 000 /mnt/etc/luks-keys/home Use the encrypted key to create our encrypted home and add a pass phrase for emergency access: # cryptsetup luksFormat /dev/mapper/osvg-home # cryptsetup luksAddKey /dev/mapper/osvg-home --key-file=/mnt/etc/luks-keys/home Now we open home, make a filesystem and mount it to /mnt/home . # cryptsetup luksOpen --key-file=/mnt/etc/luks-keys/home /dev/mapper/osvg-home home # mkfs.ext4 /dev/mapper/home # mkdir -p /mnt/home # mount /dev/mapper/home /mnt/home and rebuild the EFI and boot partition: # mkfs.vfat /dev/nvme0n1p1 # mkfs.ext4 /dev/nvme0n1p2 Setup and mount the boot/EFI partition: # mkdir /mnt/boot # mount /dev/nvme0n1p2 /mnt/boot # mkdir /mnt/boot/EFI # mkdir /mnt/esp # mount /dev/nvme0n1p1 /mnt/esp","title":"Setup LUKS for our partitions"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#install-arch","text":"","title":"Install Arch"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#sort-mirrors-by-speed","text":"The pacman package provides a Bash script, /usr/bin/rankmirrors , which can be used to rank the mirrors according to their connection and opening speeds to take advantage of using the fastest local mirror. Back up the existing /etc/pacman.d/mirrorlist : # cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak Edit /etc/pacman.d/mirrorlist.backup and uncomment mirrors for testing with rankmirrors . Run the following sed line to uncomment every mirror: # sed -i 's/^Server/#Server/' /etc/pacman.d/mirrorlist.bak Finally, rank the mirrors. Operand -n 6 means only output the 6 fastest mirrors: # rankmirrors -n 6 /etc/pacman.d/mirrorlist.bak > /etc/pacman.d/mirrorlist","title":"Sort mirrors by speed"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#install-the-base-packages","text":"Use the pacstrap script to install the base package group: # pacstrap /mnt base This group does not include all tools from the live installation, such as btrfs-progs or specific wireless firmware; see packages.both for comparison. To install packages and other groups such as base-devel , append the names to pacstrap (space separated) or to individual pacman commands after the #Chroot step.","title":"Install the base packages"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#configure-the-system","text":"","title":"Configure the system"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#gen-fstab","text":"Generate an fstab file (use -U or -L to define by UUID or labels, respectively): # genfstab -U /mnt >> /mnt/etc/fstab Check the resulting file in /mnt/etc/fstab afterwards, and edit it in case of errors. Add the following at the end of the /mnt/etc/fstab configuration. /dev/mapper/tmp /tmp tmpfs defaults 0 0 /dev/mapper/swap none swap sw 0 0 /esp/EFI /boot/EFI none defaults,bind 0 0","title":"Gen fstab"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#modify-etccrypttab","text":"Add these at the end to the /etc/crypttab . swap /dev/mapper/MyVol-swap /dev/urandom swap,cipher=aes-xts-plain64,size=256 tmp /dev/mapper/MyVol-tmp /dev/urandom tmp,cipher=aes-xts-plain64,size=256 home /dev/mapper/MyVol-home /etc/luks-keys/home","title":"Modify /etc/crypttab"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#chroot","text":"Change root into the new system: # arch-chroot /mnt","title":"Chroot"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#uncomment-pacman-multilib-option","text":"In /etc/pacman.conf uncomment the following lines. [...] [multilib] Include = /etc/pacman.d/mirrorlist [...]","title":"Uncomment pacman multilib option"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#install-packages","text":"pacman -Sy pacman -S base-devel grub efibootmgr dialog networkmanager network-manager-applet wireless_tools intel-ucode zsh w3m vim powertop bc","title":"Install Packages"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#create-my-user","text":"useradd -m -G wheel,audio,video,users,uucp,disk,optical,storage,rfkill -s /bin/zsh phg passwd phg","title":"Create my User"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#disable-root-login","text":"# passwd -l root","title":"Disable root login"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#allow-group-wheel-so-user-sudo","text":"Uncomment %wheel ALL=(ALL) ALL . Use visudo to edit the /etc/sudoers file.","title":"Allow group wheel so user sudo"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#keep-http_proxy-variables","text":"Add the following at the end of the 'Defaults' section. Defaults env_keep += \"http_proxy\" Defaults env_keep += \"https_proxy\"","title":"Keep http_proxy variables"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#install-yaourt","text":"Zuerst muss das Paket package-query installiert werden, denn yaourt beruht darauf: # curl -O https://aur.archlinux.org/cgit/aur.git/snapshot/package-query.tar.gz # tar -xvzf package-query.tar.gz # cd package-query # sudo -u phg makepkg -si Danach wechselt man wieder ins n\u00e4chst h\u00f6here Verzeichnis und installiert yaourt: # cd .. # curl -O https://aur.archlinux.org/cgit/aur.git/snapshot/yaourt.tar.gz # tar -xvzf yaourt.tar.gz # cd yaourt # sudo -u phg makepkg -si","title":"Install yaourt"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#time-zone","text":"Set the time zone: # ln -sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime Run hwclock(8) to generate /etc/adjtime: # hwclock --systohc This command assumes the hardware clock is set to UTC. See Time#Time standard for details. Enable timedated service: # systemctl enable sysdemd-timesyncd","title":"Time zone"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#locale","text":"Uncomment the following localizations in /etc/locale.gen : [...] de_DE.UTF-8 UTF-8 de_DE ISO-8859-1 [...] en_US.UTF-8 UTF-8 en_US ISO-8859-1 [...] and generate them with: # locale-gen Set the LANG variable in locale.conf(5) accordingly, for example: /etc/locale.conf LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_TIME=de_DE.UTF-8 LC_CTYPE=en_US.UTF-8 LC_COLLATE=C LC_MONETARY=de_DE.UTF-8 LC_MESSAGES=en_US.UTF-8 LC_PAPER=de_DE.UTF-8 LC_NAME=de_DE.UTF-8 LC_ADDRESS=de_DE.UTF-8 LC_TELEPHONE=de_DE.UTF-8 LC_MEASUREMENT=de_DE.UTF-8 LC_IDENTIFICATION=de_DE.UTF-8","title":"Locale"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#setup-console","text":"","title":"Setup console"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#install-console-powerline-font","text":"Install the console powerline fonts. # yaourt -S powerline-console-fonts ttf-ms-fonts Edit the /etc/vconsole.conf file and add the following to the TOP of the file: FONT=ter-powerline-v14n [...]","title":"Install console powerline font"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#set-keymap","text":"If you set the keyboard layout, make the changes persistent in vconsole.conf(5) : /etc/vconsole.conf [...] KEYMAP=de-latin1-nodeadkeys","title":"Set keymap"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#hostname","text":"Create the hostname(5) file: /etc/hostname yoetunheimr Consider adding a matching entry to hosts(5) : /etc/hosts 127.0.0.1 localhost.localdomain localhost ::1 localhost.localdomain localhost 127.0.1.1 yoetunheimr.sao.local yoetunheimr See also Network configuration#Set the hostname .","title":"Hostname"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#edit-mkinitpico","text":"Add the keyboard , keymap , lvm2 and encrypt hooks to mkinitcpio.conf : /etc/mkinitcpio.conf : HOOKS=(... keyboard keymap block lvm2 encrypt ... filesystems ...)","title":"Edit mkinitpico"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#generate-initramfs","text":"# mkinitcpio -p linux","title":"Generate initramfs"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#install-grub","text":"# grub-install --target=x86_64-efi --efi-directory=/esp --bootloader-id=grub # mount --bind /esp/EFI /boot/EFI","title":"Install GRUB"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#configuring-the-boot-loader","text":"In order to unlock the encrypted root partition at boot, the following kernel parameters need to be set by the boot loader ( /etc/default/grub ): GRUB_CMDLINE_LINUX_DEFAULT=\"quiet acpi_rev_override=1 pci=nommconf\" GRUB_CMDLINE_LINUX=\"cryptdevice=/dev/mapper/osvg-root:root root=/dev/mapper/root\" ??? Note 'Command explanation' * acpi_rev_override=1 is needed to get the NVIDIA graphics card working resp. to disable it. * The kernel option pci=nommconf disables Memory-Mapped PCI Configuration Space, which is available in Linux since kernel 2.6. Very roughly, all PCI devices have an area that describe this device (which you see with lspci -vv), and the originally method to access this area involves going through I/O ports, while PCIe allows this space to be mapped to memory for simpler access. * cryptdevice=/dev/mapper/osvg-root:root root=/dev/mapper/root configures the crypt device.","title":"Configuring the boot loader"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#generate-grub-config","text":"# grub-mkconfig -o /boot/grub/grub.cfg See Dm-crypt/System configuration#Boot loader for details.","title":"Generate GRUB config"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#reboot-into-the-installed-system","text":"Leave the chroot environment. exit Unmount all partitions and reboot. # umount -R /mnt # reboot","title":"Reboot into the installed system"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#post-installation-configuration","text":"","title":"Post installation configuration"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#get-graphicscard-and-x-working","text":"","title":"Get graphicscard and X working"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#acpi-override","text":"Add these to the kernel parameter in the /etc/default/grub configuration. GRUB_CMDLINE_LINUX_DEFAULT=\"[...] acpi_rev_override=1\" Now rebuild the GRUB configuration. # grub-mkconfig -o /boot/grub/grub.cfg","title":"ACPI Override"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#install-graphic-card-tools","text":"# pacman -S bbswitch bumblebee primus lib32-primus Use libglvnd as libgl provider. Enable the bumblebee service. # systemctl enable bumblebeed.service Afterwards reboot the system. Tip You may need to reboot twice for the firmware to notice acpi_rev_override .","title":"Install graphic card tools"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#graphics-card-driversutils","text":"# yaourt -Sy # yaourt -S nvidia-beta nvidia-utils-beta lib32-nvidia-utils-beta","title":"Graphics card drivers/utils"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#install-x","text":"# pacman -S xorg xorg-xinit xf86-input-synaptics","title":"Install X"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#install-login-manager","text":"# pacman -S lightdm # yaourt -S lightdm-webkit-theme-litarvan # systemctl enable lightdm","title":"Install login manager"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#enable-webkit2-greeter","text":"Create the lightdm.conf.d folder: # mkdir /etc/lightdm/lightdm.conf.d/ Set the default greeter by adding the following LightDM configuration file, like so: /etc/lightdm/lightdm.conf.d/50-lightdm-webkit2-greeter.conf [Seat:*] greeter-session=lightdm-webkit2-greeter","title":"Enable Webkit2 greeter"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#lightdm-webkit2-theme-litarvan","text":"Edit the file /etc/lightdm/lightdm-webkit2-greeter.conf and set the \" webkit-theme \" property to \" litarvan \", like so: [...] webkit_theme = litarvan [...]","title":"LightDM Webkit2 theme 'litarvan'"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#bspwm-session","text":"","title":"BSPWM Session"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#change-x-keyboard-layout-to-german","text":"/etc/X11/xorg.conf.d/00-keyboard.conf Section \"InputClass\" Identifier \"keyboard\" MatchIsKeyboard \"yes\" Option \"XkbLayout\" \"de\" Option \"XkbVariant\" \"nodeadkeys\" EndSection","title":"Change X keyboard layout to german"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#add-touchpad-options","text":"/etc/X11/xorg.conf.d/50-synaptics.conf : Section \"InputClass\" Identifier \"touchpad catchall\" Driver \"synaptics\" MatchIsTouchpad \"on\" # enable clik zone and configure 3 buttons on bottom Option \"ClickPad\" \"1\" Option \"SoftButtonAreas\" \"60% 0 82% 0 40% 60% 82% 0\" # other commons options than you may want to configure # scroll with two fingers (enabled vertically, disabled horizontally) Option \"VertTwoFingerScroll\" \"1\" Option \"HorizTwoFingerScroll\" \"0\" # enable natural scrolling Option \"VertScrollDelta\" \"-111\" Option \"HorizScrollDelta\" \"-111\" # enable tap as click: 1 finger -> left button, 2 fingers -> right, 3 fingers -> middle Option \"TapButton1\" \"1\" Option \"TapButton2\" \"3\" Option \"TapButton3\" \"2\" # idem but for click with 1,2,3 fingers. Use \"0\" to disable. Option \"ClickFinger1\" \"1\" Option \"ClickFinger2\" \"3\" Option \"ClickFinger3\" \"2\" # palm detection. These parameters somehow works, YMMV. Option \"PalmDetect\" \"1\" Option \"PalmMinWidth\" \"10\" Option \"PalmMinZ\" \"200\" EndSection","title":"Add Touchpad options"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#install-xorg-xbacklight-replacement","text":"Note xorg-xbacklight does not work with the modesetting driver! # yaourt -S acpilight Add the following file /etc/udev/rules.d/90-backlight.rules : SUBSYSTEM==\"backlight\", ACTION==\"add\", \\ RUN+=\"/bin/chgrp video %S%p/brightness\", \\ RUN+=\"/bin/chmod g+w %S%p/brightness\"","title":"Install xorg-xbacklight replacement"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#window-manager","text":"Install bspwm, sxhkd, feh and fonts + dependencies. # pacman -S bspwm sxhkd feh i3lock # yaourt -S polybar","title":"Window manager"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#get-my-dot-files","text":"Clone my dotfiles. # pacman -Sy # pacman -S git python-pip # cd ~ # git clone git@github.com:shokinn/.files.git ~/.files # cd .files # sudo pip install -r dotdrop/requirements.txt # alias dotdrop='eval $(grep -v \"^#\" ~/dotfiles/.env.public) ~/dotfiles/dotdrop.sh' # dotdrop install","title":"Get my dot files"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#enable-lockscreen-at-suspend","text":"Create a service file /etc/systemd/system/i3lock@.service : [Unit] Description=Lock the screen on resume from suspend Before=sleep.target [Service] User=%I Type=forking Environment=DISPLAY=:0 ExecStart=/home/%I/.config/bspwm/lock.sh [Install] WantedBy=suspend.target Enable the service # systemctl daemon-reload # systemctl enable i3lock@phg","title":"Enable lockscreen at suspend"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#make-powertop-optimazations-permanent","text":"/etc/systemd/system/powertop.service : [Unit] Description=PowerTOP auto tune [Service] Type=idle Environment=\"TERM=dumb\" ExecStart=/usr/sbin/powertop --auto-tune [Install] WantedBy=multi-user.target # systemctl daemon-reload # systemctl enable powertop.service","title":"Make powertop optimazations permanent"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#enable-network-manager","text":"# systemctl enable NetworkManager","title":"Enable network manager"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#install-packages_1","text":"# pacman -S firefox \\ alsa-utils \\ alsa-tools \\ alsa-plagins \\ pulseaudio \\ pulseaudio-alsa \\ exfat-utils \\ openssh \\ net-tools \\ keepass \\ keepass-plugin-keeagent \\ inkscape \\ gimp \\ vlc \\ qt4 \\ libsecret \\ gnome-keyring \\ libgnome-keyring \\ thunderbird \\ pinentry \\ gpa \\ dmenu \\ mc \\ nemo \\ nemo-fileroller \\ nemo-image-converter \\ nemo-preview \\ nemo-seahorse \\ nemo-share \\ linux-headers \\ wireguard-dkms \\ wireguard-tools \\ wmname # gpg --recv-keys --keyserver sks-keyservers.net 0xDB1187B9DD5F693B # yaourt -S tldr \\ keepass-plugin-rpc \\ keepass-plugin-haveibeenpwned \\ keepass-plugin-http \\ keepass2-plugin-tray-icon \\ nextcloud-client-git \\ rambox \\ crossover \\ thunderbird-enigmail \\ gtkhash-nemo \\ nemo-compare","title":"Install packages"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#enable-ssh-agent-serive","text":"# systemctl --user daemon-reload # systemctl --user enable ssh-agent.service # systemctl --user start ssh-agent.service","title":"Enable SSH-Agent Serive"},{"location":"hardware/dell_xps_15_9560/dell_xps_15_9560_arch_linux/#todo","text":"Crypto fixen Use an Hardware device for 2 nd Factor authentication Maybe use TOTP as 2 nd Factor? Audio (Mic) Get external Microphones working!","title":"TODO"},{"location":"kb/change_tty/","text":"Change TTY \u00b6 With Keybindings \u00b6 From X to TTY \u00b6 Use: CTRL + ALT + F{1..n} From TTY to X \u00b6 Use: ALT + F{F1..n} With a shell command on a TTY \u00b6 Use: chvt 1..n","title":"How to change to TTYn"},{"location":"kb/change_tty/#change-tty","text":"","title":"Change TTY"},{"location":"kb/change_tty/#with-keybindings","text":"","title":"With Keybindings"},{"location":"kb/change_tty/#from-x-to-tty","text":"Use: CTRL + ALT + F{1..n}","title":"From X to TTY"},{"location":"kb/change_tty/#from-tty-to-x","text":"Use: ALT + F{F1..n}","title":"From TTY to X"},{"location":"kb/change_tty/#with-a-shell-command-on-a-tty","text":"Use: chvt 1..n","title":"With a shell command on a TTY"},{"location":"software/cemu_zelda_setup/","text":"Cemu Zelda - Breath of the Wild setup \u00b6 This is my documentation how to setup Cemu to play Zelda - Breath of the Wild . Overview \u00b6 Cemu v.1.11.1","title":"Cemu Zelda - Breath of the Wild setup"},{"location":"software/cemu_zelda_setup/#cemu-zelda-breath-of-the-wild-setup","text":"This is my documentation how to setup Cemu to play Zelda - Breath of the Wild .","title":"Cemu Zelda - Breath of the Wild setup"},{"location":"software/cemu_zelda_setup/#overview","text":"Cemu v.1.11.1","title":"Overview"},{"location":"software/playonlinux/","text":"PlayOnLinux \u00b6 Install \u00b6 # sudo pacman -S playonlinux Register Browser protocol in Firefox \u00b6 open Confoguration with about:config Right Click -> New -> Boolean: network.protocol-handler.expose.playonlinux Value: false Click on the \"Thy this update\" button Choose the following application: /usr/share/playonlinux/bash/playonlinux-url_handler","title":"PlayOnLinux"},{"location":"software/playonlinux/#playonlinux","text":"","title":"PlayOnLinux"},{"location":"software/playonlinux/#install","text":"# sudo pacman -S playonlinux","title":"Install"},{"location":"software/playonlinux/#register-browser-protocol-in-firefox","text":"open Confoguration with about:config Right Click -> New -> Boolean: network.protocol-handler.expose.playonlinux Value: false Click on the \"Thy this update\" button Choose the following application: /usr/share/playonlinux/bash/playonlinux-url_handler","title":"Register Browser protocol in Firefox"}]}